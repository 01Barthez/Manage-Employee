PORT= # Port sécuriser sur lequel l'appli va fonctionné
PORT2= # Port non sécurisé pour les test
DEFAULT_API_PREFIX=/api/v1
NODE_ENV=development

# Information pour les configurations de rate-limiting
MAX_GLOBAL_QUERY_NUMBER=100
MAX_GLOBAL_QUERY_WINDOW=60
MAX_UNIQ_QUERY_NUMBER=10
MAX_UNIQ_QUERY_WINDOW=30

# Information pour MongoDB URL
DATABASE_URL=

# Information pour TLS Certificat
TLS_PRIVATE_KEY=
TLS_CERTIFICATE=

# Information pour configurer JWT
JWT_PRIVATE_KEY=
JWT_PUBLIC_KEY=
JWT_REFRESH_PRIVATE_KEY=
JWT_REFRESH_PUBLIC_KEY=

# Information pour configurer Nodemailer
MAIL_HOST=gmail
MAIL_ADDRESS=
MAIL_PASSWORD=
MAIL_PORT=

# Information pour configurer AWS S3
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_BUCKET_NAME=

# Information pour configurer MINIO
MINIO_ROOT_USER=
MINIO_ROOT_PASSWORD=

# Configurations de redis
# REDIS_PASSWORD=
REDIS_USERNAME=

# Configurations nginx
# NGINX_HOST=









# hELP COMMANDE

# lancer le serveur minio en local
#? docker run -d -p 9000:9000 -p 9001:9001 --name minio-managementEmployee --env-file .env -v data-minio-managementEmployee:/data-minio minio/minio server /data --console-address ":9001"

# lancer un serveur redis
#? docker run -d -p 6379:6379 --name redis-managementEmployee --env-file .env -v data-redis-managementEmployee:/data-redis redis --requirepass Password1_for_redis

# enerer les clé pour les certificats tls
#? openssl req -x509 -newkey rsa:2048 -nodes -keyout tls_private.key -out tls_certificate.crt -days 365

# Commande Pour Générer la clé privée
#? openssl genpkey -algorithm RSA -out private.key -pkeyopt rsa_keygen_bits:2048

# Commande Pour Générer la clé publique à partir de la clé privée
#? openssl rsa -pubout -in private.key -out public.key



# APP

# Preview docker in portainer graphic interface
#? docker volume create portainer_data && docker run -d -p 8000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce